{"version":3,"sources":["webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///src/pages/storys.vue","webpack:///./src/pages/storys.vue?d41a","webpack:///./src/pages/storys.vue"],"names":["doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","Object","keys","forEach","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","Array","isArray","slice","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","transition$1","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","swiper_esm_bundle_events","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","allowTouchMove","touchStartPreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_breakpoints","breakpoint","getBreakpoint","currentBreakpoint","breakPointsParams","originalParams","needsReLoop","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_Browser","isIE","isEdge","isSafari","isUiWebView","test","defaults","init","uniqueNavElements","preloadImages","updateOnImagesReady","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","slideThumbActiveClass","hideOnClick","number","render","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","swiper_esm_bundle","storys","user","String","default","StoryName","Htitle","$route","story","title","writer","intro","content","music","isplay","hallow-header","header","hallow-footer","footer","methods","play","oAudio","console","log","mounted","pages_storys","_vm","_h","$createElement","_c","_self","staticClass","headerTitle","_v","_m","_s","write","id","controls","preload","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/0.03631505c8b2327469dc.js","sourcesContent":["/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.1.2\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: September 13, 2018\n */\nimport { window, document } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 4.4.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: September 14, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          slideSize = slide[0].getBoundingClientRect().width\n            + parseFloat(slideStyles.getPropertyValue('margin-left'))\n            + parseFloat(slideStyles.getPropertyValue('margin-right'));\n        } else {\n          slideSize = slide[0].getBoundingClientRect().height\n            + parseFloat(slideStyles.getPropertyValue('margin-top'))\n            + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data$$1.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data$$1.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n    if (preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data$$1.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n    const needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakPointsParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakPointsParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => a < b).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      swiper.virtual.update();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop) return;\n        swiper.slideNext();\n      });\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop) return;\n        swiper.slidePrev();\n      });\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click');\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click');\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/dist/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = ","<template>\n\t<div class=\"storyContent\">\n\t\t<hallow-header :headerTitle=\"Htitle\"></hallow-header>\n\t\t<div class=\"story\">\n\t\t\t<div class=\"swiper-container\">\n\t\t\t\t<div class=\"swiper-wrapper\">\n\t\t\t\t\t<div class=\"swiper-slide\">slide 1</div>\n\t\t\t\t\t<div class=\"swiper-slide\">slide 2</div>\n\t\t\t\t\t<div class=\"swiper-slide\">slide 3</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"swiper-pagination\"></div>\n\t\t\t\t<div class=\"swiper-scrollbar\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"storyinfo\">\n\t\t\t\t<h2>{{story.title}}</h2>\n\t\t\t\t<h3>{{story.write}}&nbsp;&nbsp;&nbsp;&nbsp;紧箍咒</h3>\n\t\t\t\t<label>{{story.intro}}</label>\n\t\t\t</div>\n\t\t\t<div class=\"mp3player\">\n\t\t\t\t<div class=\"player\" @click=\"play\"></div>\n\t\t\t\t<audio id=\"Mcontrols\" autoplay=\"autoplay\" controls=\"controls\" preload=\"auto\" loop=\"loop\">\n\t\t\t\t\t<source :src=\"story.music\">\n\t\t\t\t</audio>\n\t\t\t</div>\n\t\t</div>\n\t\t<hallow-footer></hallow-footer>\n\t</div>\n</template>\n<style lang=\"scss\" scoped=\"\" type=\"text/css\">\n\t@import \"../../node_modules/swiper/dist/css/swiper.css\";\n\t\n\t.storyContent{\n\t\twidth:100%;\n\t\theight:100%;\n\t\tposition:relative;\n\t\t.story{\n\t\t\twidth:100%;\n\t\t\tposition:absolute;\n\t\t\ttop:88px;\n\t\t\tbottom:120px;\n\t\t\tmargin:auto;\n\t\t\t.swiper-container{\n\t\t\t\twidth:100%;\n\t\t\t\tmin-width:320px;\n\t\t\t\tmax-width:768px;\n\t\t\t\theight:100%;\n\t\t\t\tmargin:auto;\n\t\t\t}\n\t\t\t.storyinfo{\n\t\t\t\twidth:100%;\n\t\t\t\tpadding:20px;\n\t\t\t\tbackground-color:rgba(235,207,147,1);\n\t\t\t\ttext-align:left;\n\t\t\t\topacity:0;\n\t\t\t\tposition:absolute;\n\t\t\t\tleft:0;\n\t\t\t\tbottom:0;\n\t\t\t\tz-index:10;\n\t\t\t\tanimation:zoomIn 5s ease-in-out;\n\t\t\t\t& > h2{\n\t\t\t\t\twidth:100%;\n\t\t\t\t\tmin-width:320px;\n\t\t\t\t\tmax-width:768px;\n\t\t\t\t\tdisplay:block;\n\t\t\t\t\tmargin:auto;\n\t\t\t\t\tfont-size:26px;\n\t\t\t\t\tcolor:#333;\n\t\t\t\t}\n\t\t\t\t& > h3{\n\t\t\t\t\twidth:100%;\n\t\t\t\t\tmin-width:320px;\n\t\t\t\t\tmax-width:768px;\n\t\t\t\t\tmargin:auto;\n\t\t\t\t\tdisplay:block;\n\t\t\t\t\tfont-size:24px;\n\t\t\t\t\tcolor:#666;\n\t\t\t\t}\n\t\t\t\t& > label{\n\t\t\t\t\twidth:100%;\n\t\t\t\t\tmin-width:320px;\n\t\t\t\t\tmax-width:768px;\n\t\t\t\t\tmargin:auto;\n\t\t\t\t\tdisplay:block;\n\t\t\t\t\tword-break:break-all;\n\t\t\t\t\tfont-size:18px;\n\t\t\t\t\tcolor:#999;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.mp3player{\n\t\t\t\tposition:absolute;\n\t\t\t\ttop:0;\n\t\t\t\tright:0;\n\t\t\t\t.player{\n\t\t\t\t\twidth:50px;\n\t\t\t\t\theight:50px;\n\t\t\t\t\tdisplay:inline-block;\n\t\t\t\t\tbackground:url('https://raw.githubusercontent.com/wangqian0609/hallowsday/master/src/assets/hallow-n.png') no-repeat;\n\t\t\t\t\tbackground-size:cover;\n\t\t\t\t\tbackground-position:center center;\n\t\t\t\t}\n\t\t\t\t& > audio{\n\t\t\t\t\tdisplay:none;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t@keyframes zoomIn{\n\t\t0%{\n\t\t\topacity:0;\n\t\t}\n\t\t30%{\n\t\t\topacity:1;\n\t\t}\n\t\t70%{\n\t\t\topacity:1;\n\t\t}\n\t\t100{\n\t\t\topacity:0;\n\t\t}\n\t}\n</style>\n<script>\n\timport Swiper from 'swiper'\n\timport  header from '../components/header'\n\timport footer from '../components/footer'\n\n\texport default{\n\t\tprops:{\n\t\t\tuser:{\n\t\t\t\ttype:String,\n\t\t\t\tdefault:''\n\t\t\t},\n\t\t\tStoryName:{\n\t\t\t\ttype:String,\n\t\t\t\tdefault:''\n\t\t\t}\n\t\t},\n\t\tdata(){\n\t\t\treturn{\n\t\t\t\tHtitle:this.$route.params.StoryName,\n\t\t\t\tstory:{\n\t\t\t\t\ttitle:this.$route.params.StoryName,\n\t\t\t\t\twriter:'',\n\t\t\t\t\tintro:'',\n\t\t\t\t\tcontent:[''],\n\t\t\t\t\tmusic:'https://m10.music.126.net/20181101151931/26fe5fc8d823697e7801ac4acf87f3b5/ymusic/1be1/6747/9843/982f6aacbff59899418b820f1299ecfc.mp3'\n\t\t\t\t},\n\t\t\t\tisplay:true,\n\t\t\t}\n\t\t},\n\t\tcomponents:{\n\t\t\t'hallow-header':header,\n\t\t\t'hallow-footer':footer\n\t\t},\n\t\tmethods:{\n\t\t\tplay(){\n\t\t\t\tvar oAudio = document.getElementById('Mcontrols');\n\t\t\t\tif(this.isplay == true){\n\t\t\t\t\toAudio.pause();\n\t\t\t\t\tconsole.log('暂停播放');\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\toAudio.play();\n\t\t\t\t\tconsole.log('开始播放');\n\t\t\t\t}\n\t\t\t\tthis.isplay = !this.isplay;\n\t\t\t\treturn this.isplay;\n\t\t\t}\n\t\t},\n\t\tmounted(){\n\t\t\tnew Swiper('.swiper-container',{\n\t\t\t\tdirection:'vertical',\n\t\t\t\tpagination:{\n\t\t\t\t\tel:'.swiper-pagination',\n\t\t\t\t\tclickable:true\n\t\t\t\t}\n\t\t\t})\n\n\t\t}\n\t} \n</script>\n\n\n// WEBPACK FOOTER //\n// src/pages/storys.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"storyContent\"},[_c('hallow-header',{attrs:{\"headerTitle\":_vm.Htitle}}),_vm._v(\" \"),_c('div',{staticClass:\"story\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"storyinfo\"},[_c('h2',[_vm._v(_vm._s(_vm.story.title))]),_vm._v(\" \"),_c('h3',[_vm._v(_vm._s(_vm.story.write)+\"    紧箍咒\")]),_vm._v(\" \"),_c('label',[_vm._v(_vm._s(_vm.story.intro))])]),_vm._v(\" \"),_c('div',{staticClass:\"mp3player\"},[_c('div',{staticClass:\"player\",on:{\"click\":_vm.play}}),_vm._v(\" \"),_c('audio',{attrs:{\"id\":\"Mcontrols\",\"autoplay\":\"autoplay\",\"controls\":\"controls\",\"preload\":\"auto\",\"loop\":\"loop\"}},[_c('source',{attrs:{\"src\":_vm.story.music}})])])]),_vm._v(\" \"),_c('hallow-footer')],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},[_c('div',{staticClass:\"swiper-slide\"},[_vm._v(\"slide 1\")]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide\"},[_vm._v(\"slide 2\")]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide\"},[_vm._v(\"slide 3\")])]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination\"}),_vm._v(\" \"),_c('div',{staticClass:\"swiper-scrollbar\"})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-c01ac5a2\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/storys.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-c01ac5a2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./storys.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./storys.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./storys.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-c01ac5a2\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./storys.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-c01ac5a2\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/storys.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}